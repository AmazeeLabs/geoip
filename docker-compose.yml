version: '2.3'

x-lagoon-project:
  # Lagoon project name (leave `&lagoon-project` when you edit this)
  &lagoon-project geoip

x-volumes:
  &default-volumes
    # Define all volumes you would like to have real-time mounted into the docker containers
    volumes:
      - .:/app:delegated

x-environment:
  &default-environment
    LAGOON_PROJECT: *lagoon-project
    # Route that should be used locally
    LAGOON_ROUTE: http://geoip.docker.amazee.io

services:
  cli: # cli container, will be used for executing composer and any local commands (drush, drupal, etc.)
    build:
      context: .
      dockerfile: Dockerfile.cli
    image: *lagoon-project # this image will be reused as `CLI_IMAGE` in subsequent Docker builds
    labels:
      # Lagoon Labels
      lagoon.type: cli
    << : *default-volumes # loads the defined volumes from the top
    volumes_from: # mount the ssh-agent from the pygmy or cachalot ssh-agent
      - container:amazeeio-ssh-agent
    environment:
      << : *default-environment # loads the defined environment variables from the top

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
      args:
        CLI_IMAGE: *lagoon-project # Inject the name of the cli image
    labels:
      lagoon.type: nginx-php
    << : *default-volumes # loads the defined volumes from the top
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      << : *default-environment # loads the defined environment variables from the top
      LAGOON_LOCALDEV_URL: nginx-geoip.docker.amazee.io # generate another route for nginx, by default we go to varnish
    networks:
      - amazeeio-network
      - default

  php:
    build:
      context: .
      dockerfile: Dockerfile.php
      args:
        CLI_IMAGE: *lagoon-project
    labels:
      lagoon.type: nginx-php
      lagoon.name: nginx # we want this service be part of the nginx pod in Lagoon
    << : *default-volumes # loads the defined volumes from the top
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      << : *default-environment # loads the defined environment variables from the top

networks:
  amazeeio-network:
    external: true
